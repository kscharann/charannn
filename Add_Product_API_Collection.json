{
	"info": {
		"_postman_id": "add-product-clean-uuid-12345",
		"name": "Add Product APIs",
		"description": "Clean Product Add API collection for Stock Inventory System without symbols",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345"
	},
	"item": [
		{
			"name": "Add New Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Product created successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id');",
							"    pm.expect(jsonData).to.have.property('code');",
							"    pm.expect(jsonData).to.have.property('product');",
							"    pm.expect(jsonData).to.have.property('brand');",
							"    pm.expect(jsonData).to.have.property('category');",
							"    pm.expect(jsonData).to.have.property('price');",
							"    pm.expect(jsonData).to.have.property('color');",
							"    pm.expect(jsonData).to.have.property('thumbnailImage');",
							"    pm.expect(jsonData).to.have.property('subImages');",
							"    pm.expect(jsonData).to.have.property('description');",
							"    ",
							"    // Save created product ID",
							"    pm.environment.set(\"created_product_id\", jsonData.id);",
							"    pm.environment.set(\"created_product_code\", jsonData.code);",
							"});",
							"",
							"pm.test(\"Product data is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql('21244');",
							"    pm.expect(jsonData.product).to.eql('powder');",
							"    pm.expect(jsonData.brand).to.eql('ponds');",
							"    pm.expect(jsonData.category).to.eql('cosmetics');",
							"    pm.expect(jsonData.price).to.eql(123);",
							"    pm.expect(jsonData.color).to.eql('Yellow');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_jwt_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"code\": \"21244\",\n    \"product\": \"powder\",\n    \"brand\": \"ponds\",\n    \"category\": \"cosmetics\",\n    \"price\": 123,\n    \"color\": \"Yellow\",\n    \"thumbnailImage\": \"string\",\n    \"subImages\": \"string\",\n    \"description\": \"string\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"products"
					]
				},
				"description": "Add a new product with Code, Product, Brand, Category, Price, Color, ThumbnailImage, SubImages, Description"
			},
			"response": []
		},
		{
			"name": "Add Lipstick Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Lipstick created successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id');",
							"    pm.expect(jsonData.code).to.eql('21245');",
							"    pm.expect(jsonData.product).to.eql('lipstick');",
							"    pm.expect(jsonData.brand).to.eql('maybelline');",
							"    pm.expect(jsonData.category).to.eql('cosmetics');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_jwt_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"code\": \"21245\",\n    \"product\": \"lipstick\",\n    \"brand\": \"maybelline\",\n    \"category\": \"cosmetics\",\n    \"price\": 89,\n    \"color\": \"Red\",\n    \"thumbnailImage\": \"lipstick-thumb.jpg\",\n    \"subImages\": \"lipstick1.jpg,lipstick2.jpg\",\n    \"description\": \"Long-lasting matte lipstick\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"products"
					]
				},
				"description": "Add lipstick product example"
			},
			"response": []
		},
		{
			"name": "Add Foundation Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Foundation created successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id');",
							"    pm.expect(jsonData.code).to.eql('21246');",
							"    pm.expect(jsonData.product).to.eql('foundation');",
							"    pm.expect(jsonData.brand).to.eql('loreal');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_jwt_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"code\": \"21246\",\n    \"product\": \"foundation\",\n    \"brand\": \"loreal\",\n    \"category\": \"cosmetics\",\n    \"price\": 156,\n    \"color\": \"Beige\",\n    \"thumbnailImage\": \"foundation-thumb.jpg\",\n    \"subImages\": \"foundation1.jpg,foundation2.jpg\",\n    \"description\": \"Full coverage liquid foundation\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"products"
					]
				},
				"description": "Add foundation product example"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8081",
			"type": "string"
		}
	]
}
